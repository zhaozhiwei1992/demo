#J2Cache configuration


#########################################
# Cache Broadcast Method ??????
# values:
# jgroups -> use jgroups's multicast ??jgroups???
# redis -> use redis publish/subscribe mechanism (using jedis) ??redis???/???????jedis?
# lettuce -> use redis publish/subscribe mechanism (using lettuce, Recommend) ??redis???/???????lettuce????
# rabbitmq -> use RabbitMQ publisher/consumer mechanism ??RabbitMQ???/?????
# rocketmq -> use RocketMQ publisher/consumer mechanism ??RocketMQ???/?????
# none -> don't notify the other nodes in cluster ????????????
# xx.xxxx.xxxx.Xxxxx your own cache broadcast policy classname that implement net.oschina.j2cache.cluster.ClusterPolicy ??????net.oschina.j2cache.cluster.ClusterPolicy?????????
#########################################
#????
j2cache.broadcast = lettuce

#????
# jgroups properties
jgroups.channel.name = j2cache
#jgroups.configXml = /network.xml

# RabbitMQ properties
#rabbitmq.exchange = j2cache
#rabbitmq.host = localhost
#rabbitmq.port = 5672
#rabbitmq.username = guest
#rabbitmq.password = guest

# RocketMQ properties
#rocketmq.name = j2cache
#rocketmq.topic = j2cache
# use ; to split multi hosts
#rocketmq.hosts = 127.0.0.1:9876

#########################################
# Level 1&2 provider ????????
# values:
# none -> disable this level cache ????????
# ehcache -> use ehcache2 as level 1 cache ??ehcache2??1???
# ehcache3 -> use ehcache3 as level 1 cache ??ehcache3??1???
# caffeine -> use caffeine as level 1 cache(only in memory) ??caffeine??1??????????
# redis -> use redis as level 2 cache (using jedis) ?redis??2??????jedis?
# lettuce -> use redis as level 2 cache (using lettuce) ??redis??2?????? lettuce)
# readonly-redis -> use redis as level 2 cache ,but never write data to it. if use this provider, you must uncomment `j2cache.L2.config_section` to make the redis configurations available. ?redis??2???????????????????????????????? j2cache.L2.config_section???redis?????
# memcached -> use memcached as level 2 cache (xmemcached), ??memcached??2????xmemcached?
# [classname] -> use custom provider ?????????
#########################################

# ???????ehcache
j2cache.L1.provider_class = ehcache
# ???????redis->lettuce
j2cache.L2.provider_class = lettuce

# When L2 provider isn't `redis`, using `L2.config_section = redis` to read redis configurations
# ?L2?????`redis`????`L2.config_section = redis`??redis??
# j2cache.L2.config_section = redis

# Enable/Disable ttl in redis cache data (if disabled, the object in redis will never expire, default:true)
# ?redis???????/??ttl???????redis??????????????true?
# NOTICE: redis hash mode (redis.storage = hash) do not support this feature) ???redis?????redis.storage =??????????
j2cache.sync_ttl_to_redis = true

# Whether to cache null objects by default (default false)
# ????????????????false?
j2cache.default_cache_null_object = true

#########################################
# Cache Serialization Provider ?????????
# values:
# fst -> using fast-serialization (recommend) ??fast-serialization???????
# kryo -> using kryo serialization kryo???
# json -> using fst's json serialization (testing) ??fst?json???????
# fastjson -> using fastjson serialization (embed non-static class not support) ??fastjson???????????????
# java -> java standard Java??
# fse -> using fse serialization ??fse???
# [classname implements Serializer]
#########################################

j2cache.serialization = fst
#json.map.person = net.oschina.j2cache.demo.Person

#########################################
# Ehcache configuration
#########################################

ehcache.configXml = /j2cache/ehcache.xml

# ehcache3.configXml = /ehcache3.xml
# ehcache3.defaultHeapSize = 1000

#########################################
# Caffeine configuration
# caffeine.region.[name] = size, xxxx[s|m|h|d]
#
#########################################
#caffeine.properties = /caffeine.properties

#########################################
# Redis connection configuration
#########################################

#########################################
# Redis Cluster Mode
#
# single -> single redis server ?Redis???
# sentinel -> master-slaves servers ?????
# cluster -> cluster servers (?????????? database = 0?
# sharded -> sharded servers  (????????? hosts ???????????? ; redis://user:password@127.0.0.1:6379/0?
#
#########################################

redis.mode = single

#redis storage mode (generic|hash)
redis.storage = generic

## redis pub/sub channel name
redis.channel = j2cache
## redis pub/sub server (using redis.hosts when empty)
redis.channel.host =

#cluster name just for sharded
redis.cluster_name = j2cache

## redis cache namespace optional, default[empty]
redis.namespace =

## redis command scan parameter count, default[1000] redis????????????[1000]
#redis.scanCount = 1000

## connection
# Separate multiple redis nodes with commas, such as 192.168.0.10:6379,192.168.0.11:6379,192.168.0.12:6379

#redis.hosts = 127.0.0.1:6379
#redis.timeout = 2000
#redis.password =
#redis.database = 0
#redis.ssl = false

## redis pool properties redis?????
#redis.maxTotal = 100
#redis.maxIdle = 10
#redis.maxWaitMillis = 5000
#redis.minEvictableIdleTimeMillis = 60000
#redis.minIdle = 1
#redis.numTestsPerEvictionRun = 10
#redis.lifo = false
#redis.softMinEvictableIdleTimeMillis = 10
#redis.testOnBorrow = true
#redis.testOnReturn = false
#redis.testWhileIdle = true
#redis.timeBetweenEvictionRunsMillis = 300000
#redis.blockWhenExhausted = false
#redis.jmxEnabled = false

#########################################
# Lettuce scheme
#
# redis -> single redis server
# rediss -> single redis server with ssl
# redis-sentinel -> redis sentinel
# redis-cluster -> cluster servers
#
#########################################

## redis command scan parameter count, default[1000]
lettuce.scanCount = 1000
lettuce.namespace =
lettuce.storage = hash
lettuce.channel = j2cache
lettuce.scheme = redis
lettuce.hosts = 127.0.0.1:6379
lettuce.password =
lettuce.database = 0
lettuce.sentinelMasterId =
lettuce.maxTotal = 100
lettuce.maxIdle = 10
lettuce.minIdle = 10
# timeout in milliseconds
lettuce.timeout = 10000
# redis cluster topology refresh interval in milliseconds
lettuce.clusterTopologyRefresh = 3000

#########################################
# memcached server configurations
# refer to https://gitee.com/mirrors/XMemcached
#########################################

#memcached.servers = 127.0.0.1:11211
#memcached.username =
#memcached.password =
#memcached.connectionPoolSize = 10
#memcached.connectTimeout = 1000
#memcached.failureMode = false
#memcached.healSessionInterval = 1000
#memcached.maxQueuedNoReplyOperations = 100
#memcached.opTimeout = 100
#memcached.sanitizeKeys = false
