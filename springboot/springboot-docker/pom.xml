<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.7.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.lx.demo</groupId>
    <artifactId>springboot-docker</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>demo</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
        <docker.image.prefix>springboot-docker</docker.image.prefix>
        <docker.plugin.version>1.1.1</docker.plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!-- 配置当前项目的jdk版本信息 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.plugin.version}</version>
                <!--                这玩意儿打出来的包没有manifest-->
                <!--				<executions>-->
                <!--                    <execution>-->
                <!--                        <phase>package</phase>-->
                <!--                        <goals>-->
                <!--                        <goal>build</goal>-->
                <!--                    </goals>-->
                <!--                    </execution>-->
                <!--                </executions>-->
                <configuration>
                    <!--					<dockerHost>https://192.168.2.68:2376</dockerHost>-->
                    <!--					<dockerCertPath>../docker/cenos-certs</dockerCertPath>-->
                    <imageName>${docker.image.prefix}/${project.artifactId}:${project.version}</imageName>
                    <!--<dockerDirectory>${project.basedir}/</dockerDirectory>-->
                    <forceTags>true</forceTags>
                    <maintainer>zhaozhiweishanxi@gmail.com</maintainer>
<!--                    <baseImage>java:8</baseImage>-->
<!--                    依赖较少-->
                    <baseImage>frolvlad/alpine-oraclejdk8</baseImage>
                    <volumes>/tmp</volumes>
                    <!--					<workdir>/root</workdir>-->
                    <!--"${JAVA_OPTS}",-->
                    <!--					系统属性egd表示熵收集守护进程(entropy gathering daemon)-->
                    <entryPoint>
                        ["java","-Djava.security.egd=file:/dev/./urandom","-jar","/${project.build.finalName}.jar"]
                    </entryPoint>
                    <!--					<skipDockerBuild>true</skipDockerBuild>-->
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                        <!--                        <resource>-->
                        <!--                            <targetPath>/docker</targetPath>-->
                        <!--                            <directory>../docker</directory>-->
                        <!--                            <include>.env</include>-->
                        <!--                        </resource>-->
                    </resources>

                    <serverId>registry-aliyuncs</serverId>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
