#spring.application.name=@artifactId@
#server.port=${port:10086}
#
## 请求规则, 不做实现，只做url的搬运工, 测试访问http://127.0.0.1:10086/provider/users
##zuul.routes.api-a.path=/provider/**
## 转发服务 forward
##zuul.routes.api-a.serviceId=user-service-client
#
## eureka地址
##eureka.client.serviceUrl.defaultZone=http://user:password@localhost:8761/eureka/
#
##打开endpoint
#management.security.enabled=false
management:
  security:
    enabled: false
  endpoints:
    web:
      exposure:
        include: '*'

server:
  port: ${port:10086}
spring:
  application:
    name: '@artifactId@'
  # 透过zuul上传同样需要控制大小限制
  http:
    multipart:
      max-file-size: 200Mb
      max-request-size: 200Mb
# 貌似全部走默认的，没有鸡儿用
#zuul:
#  ignored-services: '*' # 这玩意儿不要乱配，容易废了
#  routes:
#    user-service-provider: /user/**
#  user-service-route: #给路由规则起个名字
#    service-id: user-service-provider
#    path: /user/**
#  user-client-route: #SimpleHostRoutingFilter
#    url: http://localhost:8090/ #指定url, 这种方式不被loadbalance
#    path: /resttemplate/**   # 访问/resttemplate/users 就会变成http://localhost:8080/resttemplate/users
#  upload-file-route:
#    service-id: upload-file
#    path: /upload/**
logging:
  level:
    com.netflix: DEBUG

# 上传超过一分钟抛异常
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds:
  60000

# ribbon设置超时
ribbon:
  #Closing connections idle longer than 30000 SECONDS
  ConnectTimeout: 30000
  ReadTimeout: 60000

# 禁用过滤器 zuul.<filtername>.<filtertype>.disable=true
# 这个龟儿子关不掉..
zuul:
  PreRequestLogFilter:
    pre:
      disable: true
  ribbon:
    eager-load:
      enabled: true # 提前加载，加快首次访问速度
