eureka:
  client:
    serviceUrl:
#      defaultZone: http://user:password@peer1:8761/eureka,http://user:password@peer2:8762/eureka #高可用配置
      defaultZone: http://user:password@localhost:8761/eureka
  instance:
    hostname: localhost
    port: 8761
    preferIpAddress: true # 将自己的ip注册到eureka server上, 没起作用

# 自定义白名单
security:
#  loginpage: http://${GATEWAY_SERVER:127.0.0.1}:${GATEWAY_SERVER_PORT:80}/busportal/login.page
  ignoring:
    antpatterns: '/demo/**,/swagger-ui.html,/api/**'

server:
  port: ${port:9090}
spring:
  application:
    name: '@artifactId@'
  # mq
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

# 服务追踪配置开始
  #zipkin
  zipkin:
    rabbitmq:
      queue: zipkin
#    # zipkin的地址：通过真实IP地址访问
    base-url: http://${ZIPKIN_SERVER:127.0.0.1}:${ZIPKIN_SERVER_PORT:9411}
    #关闭服务发现，否则spring cloud会把zipkin的url当作服务名称
    discovery-client-enabled: false
    sender:
      #使用http的方式传输数据
      type: web
    #通过服务名访问
#    base-url: http://zipkin-server/
    enabled: true
  sleuth:
    web:
      client:
        enabled: true
    sampler:
      #设置采样率，为了测试设置100%采集，设置为1.0
      percentage: 1.0  #zipkin采集率  0.1表示 10%采集率
    traceId128: true
    propagation-keys: user_name
# 服务追踪配置结束

management:
  endpoints:
    web:
      exposure:
        include: '*'
#  cloud:
#    config:
#      failFast: true
#      retry: #和重试机制相关的配置有如下四个：
#        max-interval: 2000 # 最大间隔时间，默认2000ms
#        multiplier: 1.1 # 间隔乘数，默认1.1
#        initial-interval: 1000 # 初始重试间隔时间，默认1000ms
#        max-attempts: 6 # 配置重试次数，默认为6
#      bus:
#        trace:
#          enabled: true
#      allowOverride: true
#      overrideNone: true
#      overrideSystemProperties: false
#    stream:
#      debugmode: true
#      #sender: ${spring.stream.sender:false}
#      #Binding: 包括 Input Binding 和 Output Binding。
#      #Binding 在消息中间件与应用程序提供的 Provider 和 Consumer 之间提供了一个桥梁，
#      #实现了开发者只需使用应用程序的 Provider 或 Consumer 生产或消费数据即可，屏蔽了开发者与底层消息中间件的接触。
#      bindings:
#        # exchange1
#        message_output:
##          destination: dic_version_topic
##          content-type: application/json
#          producer:
#            group: 'fasp2_group'
#            sync: true
#        #自定义的名称
#        #exchange2
#        message_input:
#          destination: dic_version_topic # 订阅的topic
##          content-type: application/json # content是将对象以json方式显示在RabbitMQ管理控制台
#          group: 'group_${spring.application.name}'    #group 服务分组
#          consumer:
#            concurrency: 20
#            maxAttempts: 1
#            orderly: false  # 是否按顺序消费
#            tags: Basicdata_version

logging:
  level:
    root: INFO
    org.springframework.web.servlet.DispatcherServlet: DEBUG
